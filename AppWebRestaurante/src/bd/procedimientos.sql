-- 1. Calcular ingresos totales por producto
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_CALCULAR_INGRESOS_SP (
P_ID_PRODUCTO IN NUMBER,
P_TOTAL OUT NUMBER
)
IS
BEGIN
SELECT SUM(subtotal)
INTO P_TOTAL
FROM FIDE_PEDIDO_TB
WHERE id_producto = P_ID_PRODUCTO;
END;
/
-- 2. Mostrar insumos asociados a un producto
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_LISTAR_INSUMOS_SP (
P_ID_PRODUCTO IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT I.id_insumo, I.nombre
FROM FIDE_PRODUCTO_INSUMO_TB PI
JOIN FIDE_INSUMO_TB I ON PI.id_insumo = I.id_insumo
WHERE PI.id_producto = P_ID_PRODUCTO;
END;
/
-- 3. Mostrar productos con stock inferior a X
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTOS_STOCK_BAJO_SP (
P_MINIMO IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT id_producto, nombre
FROM FIDE_PRODUCTO_TB
WHERE FIDE_PRODUCTO_OBTENER_STOCK_FN(id_producto) < P_MINIMO;
END;
/
-- 4. Mostrar total gastado por cliente
CREATE OR REPLACE PROCEDURE FIDE_CLIENTE_TOTAL_GASTADO_SP (
P_ID_CLIENTE IN NUMBER,
P_TOTAL OUT NUMBER
)
IS
BEGIN
SELECT SUM(total)
INTO P_TOTAL
FROM FIDE_PEDIDO_TB
WHERE id_cliente = P_ID_CLIENTE;
END;
/
-- 5. Verificar si cliente tiene pedidos pendientes
CREATE OR REPLACE PROCEDURE FIDE_CLIENTE_TIENE_PEDIDOS_PENDIENTES_SP (
P_ID_CLIENTE IN NUMBER,
P_RESULTADO OUT VARCHAR2
)
IS
V_COUNT NUMBER;
BEGIN
SELECT COUNT(*) INTO V_COUNT
FROM FIDE_PEDIDO_TB
WHERE id_cliente = P_ID_CLIENTE AND id_estado = 1;
IF V_COUNT > 0 THEN
P_RESULTADO := 'TIENE PEDIDOS PENDIENTES';
ELSE
P_RESULTADO := 'SIN PEDIDOS PENDIENTES';
END IF;
END;
/
-- 6. Mostrar dirección de un cliente por nombre
CREATE OR REPLACE PROCEDURE FIDE_CLIENTE_OBTENER_DIRECCION_POR_NOMBRE_SP (
P_NOMBRE_CLIENTE IN VARCHAR2,
P_DIRECCION OUT VARCHAR2
)
IS
BEGIN
SELECT direccion
INTO P_DIRECCION
FROM FIDE_CLIENTE_TB C
JOIN FIDE_DIRECCION_TB D ON C.id_cliente = D.id_cliente
WHERE UPPER(C.nombre) = UPPER(P_NOMBRE_CLIENTE);
END;
/
-- 7. Mostrar resumen de pedidos por cliente
CREATE OR REPLACE PROCEDURE FIDE_CLIENTE_RESUMEN_PEDIDOS_SP (
P_ID_CLIENTE IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT id_pedido, fecha_pedido, total
FROM FIDE_PEDIDO_TB
WHERE id_cliente = P_ID_CLIENTE;
END;
/
-- 8. Mostrar pedidos por estado
CREATE OR REPLACE PROCEDURE FIDE_PEDIDOS_POR_ESTADO_SP (
P_ID_ESTADO IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT id_pedido, fecha_pedido, total
FROM FIDE_PEDIDO_TB
WHERE id_estado = P_ID_ESTADO;
END;
/
-- 9. Validar consistencia de precios en pedidos
CREATE OR REPLACE PROCEDURE FIDE_PEDIDO_VALIDAR_PRECIOS_SP (
P_ID_PEDIDO IN NUMBER,
P_RESULTADO OUT VARCHAR2
)
IS
V_PRECIO NUMBER;
V_UNIT NUMBER;
BEGIN
SELECT subtotal, cantidad * precio_unitario
INTO V_PRECIO, V_UNIT
FROM FIDE_PEDIDO_TB
WHERE id_pedido = P_ID_PEDIDO;
IF V_PRECIO = V_UNIT THEN
P_RESULTADO := 'CORRECTO';
ELSE
P_RESULTADO := 'INCONSISTENTE';
END IF;
END;
/
-- 10. Mostrar total ingresado por producto
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_TOTAL_INGRESO_SP (
P_ID_PRODUCTO IN NUMBER,
P_CANTIDAD OUT NUMBER
)
IS
BEGIN
SELECT SUM(cantidad)
INTO P_CANTIDAD
FROM FIDE_INGRESO_TB
WHERE id_producto = P_ID_PRODUCTO;
END;
/
-- 11. Mostrar total egresado por producto
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_TOTAL_EGRESO_SP (
P_ID_PRODUCTO IN NUMBER,
P_CANTIDAD OUT NUMBER
)
IS
BEGIN
SELECT SUM(cantidad)
INTO P_CANTIDAD
FROM FIDE_EGRESO_TB
WHERE id_producto = P_ID_PRODUCTO;
END;
/
-- 12. Listar proveedores con más de una orden
CREATE OR REPLACE PROCEDURE FIDE_PROVEEDORES_MULTIPLES_ORDENES_SP (
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT id_proveedor, nombre
FROM FIDE_PROVEEDOR_TB
WHERE id_proveedor IN (
SELECT id_proveedor
FROM FIDE_ORDEN_COMPRA_TB
GROUP BY id_proveedor
HAVING COUNT(*) > 1
);
END;
/
-- 13. Calcular monto total de todas las órdenes
CREATE OR REPLACE PROCEDURE FIDE_ORDENES_TOTAL_GENERAL_SP (
P_TOTAL OUT NUMBER
)
IS
BEGIN
SELECT SUM(total)
INTO P_TOTAL
FROM FIDE_ORDEN_COMPRA_TB;
END;
/
-- 14. Listar insumos por unidad de medida
CREATE OR REPLACE PROCEDURE FIDE_INSUMOS_POR_UNIDAD_SP (
P_ID_UNIDAD IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT id_insumo, nombre
FROM FIDE_INSUMO_TB
WHERE id_unidad_medida = P_ID_UNIDAD;
END;
/
-- 15. Contar productos por categoría
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_CONTAR_PRODUCTOS_SP (
P_ID_CATEGORIA IN NUMBER,
P_TOTAL OUT NUMBER
)
IS
BEGIN
SELECT COUNT(*) INTO P_TOTAL
FROM FIDE_PRODUCTO_TB
WHERE id_categoria = P_ID_CATEGORIA;
END;
/
-- 16. Obtener nombre de unidad de medida
CREATE OR REPLACE PROCEDURE FIDE_UNIDAD_OBTENER_NOMBRE_SP (
P_ID_UNIDAD IN NUMBER,
P_NOMBRE OUT VARCHAR2
)
IS
BEGIN
SELECT nombre INTO P_NOMBRE
FROM FIDE_UNIDAD_MEDIDA_TB
WHERE id_unidad_medida = P_ID_UNIDAD;
END;
/
-- 17. Verificar si correo de cliente ya existe
CREATE OR REPLACE PROCEDURE FIDE_CLIENTE_VALIDAR_CORREO_SP (
P_CORREO IN VARCHAR2,
P_EXISTE OUT VARCHAR2
)
IS
V_COUNT NUMBER;
BEGIN
SELECT COUNT(*) INTO V_COUNT
FROM FIDE_CLIENTE_TB
WHERE correo = P_CORREO;
IF V_COUNT > 0 THEN
P_EXISTE := 'YA EXISTE';
ELSE
P_EXISTE := 'DISPONIBLE';
END IF;
END;
/
-- 18. Obtener nombre de rol de usuario
CREATE OR REPLACE PROCEDURE FIDE_USUARIO_OBTENER_ROL_SP (
P_ID_USUARIO IN NUMBER,
P_NOMBRE OUT VARCHAR2
)
IS
BEGIN
SELECT R.nombre INTO P_NOMBRE
FROM FIDE_USUARIO_TB U
JOIN FIDE_ROL_TB R ON U.id_rol = R.id_rol
WHERE U.id_usuario = P_ID_USUARIO;
END;
/
-- 19. Obtener los 5 productos más vendidos
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTOS_TOP5_VENTAS_SP (
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT PR.id_producto, PR.nombre,
SUM(P.cantidad) AS total_vendido
FROM FIDE_PEDIDO_TB P
JOIN FIDE_PRODUCTO_TB PR ON P.id_producto = PR.id_producto
GROUP BY PR.id_producto, PR.nombre
ORDER BY total_vendido DESC
FETCH FIRST 5 ROWS ONLY;
END;
/
-- 20. Validar si un producto tiene egresos registrados
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_TIENE_EGRESOS_SP (
P_ID_PRODUCTO IN NUMBER,
P_RESULTADO OUT VARCHAR2
)
IS
V_COUNT NUMBER;
BEGIN
SELECT COUNT(*) INTO V_COUNT
FROM FIDE_EGRESO_TB
WHERE id_producto = P_ID_PRODUCTO;
IF V_COUNT > 0 THEN
P_RESULTADO := 'TIENE EGRESOS';
ELSE
P_RESULTADO := 'SIN EGRESOS';
END IF;
END;
/
-- 21. Mostrar todas las órdenes de un proveedor
CREATE OR REPLACE PROCEDURE FIDE_ORDENES_POR_PROVEEDOR_SP (
P_ID_PROVEEDOR IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT id_orden_compra, fecha, total
FROM FIDE_ORDEN_COMPRA_TB
WHERE id_proveedor = P_ID_PROVEEDOR;
END;
/
-- 22. Mostrar insumos usados en todos los productos
CREATE OR REPLACE PROCEDURE FIDE_LISTAR_INSUMOS_USADOS_SP (
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT DISTINCT I.id_insumo, I.nombre
FROM FIDE_INSUMO_TB I
JOIN FIDE_PRODUCTO_INSUMO_TB PI ON I.id_insumo = PI.id_insumo;
END;
/
-- 23. Mostrar total de pedidos por estado
CREATE OR REPLACE PROCEDURE FIDE_CONTAR_PEDIDOS_ESTADO_SP (
P_ID_ESTADO IN NUMBER,
P_TOTAL OUT NUMBER
)
IS
BEGIN
SELECT COUNT(*) INTO P_TOTAL
FROM FIDE_PEDIDO_TB
WHERE id_estado = P_ID_ESTADO;
END;
/
-- 24. Verificar si un proveedor tiene órdenes
CREATE OR REPLACE PROCEDURE FIDE_PROVEEDOR_TIENE_ORDENES_SP (
P_ID_PROVEEDOR IN NUMBER,
P_RESULTADO OUT VARCHAR2
)
IS
V_COUNT NUMBER;
BEGIN
SELECT COUNT(*) INTO V_COUNT
FROM FIDE_ORDEN_COMPRA_TB
WHERE id_proveedor = P_ID_PROVEEDOR;
IF V_COUNT > 0 THEN
P_RESULTADO := 'TIENE ORDENES';
ELSE
P_RESULTADO := 'SIN ORDENES';
END IF;
END;
/
-- 25. Listar productos sin pedidos realizados
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTOS_SIN_PEDIDOS_SP (
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT id_producto, nombre
FROM FIDE_PRODUCTO_TB
WHERE id_producto NOT IN (
SELECT DISTINCT id_producto
FROM FIDE_PEDIDO_TB
);
END;
/