-- 1 FIDE_ROL_TB
-- Insertar un rol
CREATE OR REPLACE PROCEDURE FIDE_ROL_INSERTAR_SP (
P_ID_ROL IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
INSERT INTO FIDE_ROL_TB (id_rol, nombre)
VALUES (P_ID_ROL, P_NOMBRE);
END;
/
-- Actualizar un rol
CREATE OR REPLACE PROCEDURE FIDE_ROL_ACTUALIZAR_SP (
P_ID_ROL IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
UPDATE FIDE_ROL_TB
SET nombre = P_NOMBRE
WHERE id_rol = P_ID_ROL;
END;
/
-- Eliminar un rol
CREATE OR REPLACE PROCEDURE FIDE_ROL_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_ROL_TB
WHERE id_rol = P_ID;
END;
/
-- Obtener un rol por ID
CREATE OR REPLACE PROCEDURE FIDE_ROL_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_ROL_TB
WHERE id_rol = P_ID;
END;
/
-- 2 FIDE_USUARIO_TB
-- Insertar un usuario
CREATE OR REPLACE PROCEDURE FIDE_USUARIO_INSERTAR_SP (
P_ID_USUARIO IN NUMBER,
P_NOMBRE IN VARCHAR2,
P_CORREO IN VARCHAR2,
P_CONTRASENA IN VARCHAR2,
P_ID_ROL IN NUMBER
) IS
BEGIN
INSERT INTO FIDE_USUARIO_TB (
id_usuario, nombre, correo, contrasena, id_rol
) VALUES (
P_ID_USUARIO, P_NOMBRE, P_CORREO, P_CONTRASENA, P_ID_ROL
);
END;
/
-- Actualizar un usuario
CREATE OR REPLACE PROCEDURE FIDE_USUARIO_ACTUALIZAR_SP (
P_ID_USUARIO IN NUMBER,
P_NOMBRE IN VARCHAR2,
P_CORREO IN VARCHAR2,
P_CONTRASENA IN VARCHAR2,
P_ID_ROL IN NUMBER
) IS
BEGIN
UPDATE FIDE_USUARIO_TB
SET nombre = P_NOMBRE,
correo = P_CORREO,
contrasena = P_CONTRASENA,
id_rol = P_ID_ROL
WHERE id_usuario = P_ID_USUARIO;
END;
/
-- Eliminar un usuario
CREATE OR REPLACE PROCEDURE FIDE_USUARIO_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_USUARIO_TB
WHERE id_usuario = P_ID;
END;
/
-- Obtener un usuario por ID
CREATE OR REPLACE PROCEDURE FIDE_USUARIO_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_USUARIO_TB
WHERE id_usuario = P_ID;
END;
/
-- Obtener datos de usuario por ID
CREATE OR REPLACE PROCEDURE FIDE_USUARIO_OBTENER_POR_ID_SP (
P_ID_USUARIO IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT id_usuario, nombre, correo, id_rol
FROM FIDE_USUARIO_TB
WHERE id_usuario = P_ID_USUARIO;
END;
/
 -- Cambiar password
CREATE OR REPLACE PROCEDURE FIDE_USUARIO_CAMBIAR_PASSWORD_SP (
P_ID_USUARIO IN NUMBER,
P_NUEVA_CONTRASENA IN VARCHAR2
)
IS
BEGIN
UPDATE FIDE_USUARIO_TB
SET contrasena = P_NUEVA_CONTRASENA
WHERE id_usuario = P_ID_USUARIO;
END;
/
-- Verificar Password 
CREATE OR REPLACE PROCEDURE FIDE_USUARIO_VERIFICAR_PASSWORD_SP (
P_CORREO IN VARCHAR2,
P_CONTRASENA IN VARCHAR2,
P_RESULTADO OUT VARCHAR2
)
IS
V_COUNT NUMBER;
BEGIN
SELECT COUNT(*) INTO V_COUNT
FROM FIDE_USUARIO_TB
WHERE correo = P_CORREO
AND contrasena = P_CONTRASENA;
IF V_COUNT = 1 THEN
P_RESULTADO := 'VALIDO';
ELSE
P_RESULTADO := 'INCORRECTO';
END IF;
END;
/
-- 3 FIDE_CATEGORIA_TB
-- Insertar una categoría
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_INSERTAR_SP (
P_ID_CATEGORIA IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
INSERT INTO FIDE_CATEGORIA_TB (id_categoria, nombre)
VALUES (P_ID_CATEGORIA, P_NOMBRE);
END;
/
-- Actualizar una categoría
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_ACTUALIZAR_SP (
P_ID_CATEGORIA IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
UPDATE FIDE_CATEGORIA_TB
SET nombre = P_NOMBRE
WHERE id_categoria = P_ID_CATEGORIA;
END;
/
-- Eliminar una categoría
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_CATEGORIA_TB
WHERE id_categoria = P_ID;
END;
/
-- Obtener una categoría por ID
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_CATEGORIA_TB
WHERE id_categoria = P_ID;
END;
/
-- 4 FIDE_UNIDAD_MEDIDA_TB
-- Insertar una unidad de medida
CREATE OR REPLACE PROCEDURE FIDE_UNIDAD_MEDIDA_INSERTAR_SP (
P_ID_UNIDAD_MEDIDA IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
INSERT INTO FIDE_UNIDAD_MEDIDA_TB (id_unidad_medida, nombre)
VALUES (P_ID_UNIDAD_MEDIDA, P_NOMBRE);
END;
/
-- Actualizar una unidad de medida
CREATE OR REPLACE PROCEDURE FIDE_UNIDAD_MEDIDA_ACTUALIZAR_SP (
P_ID_UNIDAD_MEDIDA IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
UPDATE FIDE_UNIDAD_MEDIDA_TB
SET nombre = P_NOMBRE
WHERE id_unidad_medida = P_ID_UNIDAD_MEDIDA;
END;
/
-- Eliminar una unidad de medida
CREATE OR REPLACE PROCEDURE FIDE_UNIDAD_MEDIDA_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_UNIDAD_MEDIDA_TB
WHERE id_unidad_medida = P_ID;
END;
/
-- Obtener una unidad de medida por ID
CREATE OR REPLACE PROCEDURE FIDE_UNIDAD_MEDIDA_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_UNIDAD_MEDIDA_TB
WHERE id_unidad_medida = P_ID;
END;
/
-- 5 FIDE_PRODUCTO_TB
-- Insertar un producto
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_INSERTAR_SP (
P_ID_PRODUCTO IN NUMBER,
P_NOMBRE IN VARCHAR2,
P_DESCRIPCION IN VARCHAR2,
P_PRECIO IN NUMBER,
P_ID_CATEGORIA IN NUMBER,
P_ID_UNIDAD_MEDIDA IN NUMBER
) IS
BEGIN
INSERT INTO FIDE_PRODUCTO_TB (
id_producto, nombre, descripcion, precio, id_categoria, id_unidad_medida
) VALUES (
P_ID_PRODUCTO, P_NOMBRE, P_DESCRIPCION, P_PRECIO, P_ID_CATEGORIA, P_ID_UNIDAD_MEDIDA
);
END;
/
-- Actualizar un producto
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_ACTUALIZAR_SP (
P_ID_PRODUCTO IN NUMBER,
P_NOMBRE IN VARCHAR2,
P_DESCRIPCION IN VARCHAR2,
P_PRECIO IN NUMBER,
P_ID_CATEGORIA IN NUMBER,
P_ID_UNIDAD_MEDIDA IN NUMBER
) IS
BEGIN
UPDATE FIDE_PRODUCTO_TB
SET nombre = P_NOMBRE,
descripcion = P_DESCRIPCION,
precio = P_PRECIO,
id_categoria = P_ID_CATEGORIA,
id_unidad_medida = P_ID_UNIDAD_MEDIDA
WHERE id_producto = P_ID_PRODUCTO;
END;
/
-- Eliminar un producto
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_PRODUCTO_TB
WHERE id_producto = P_ID;
END;
/
-- Obtener un producto por ID
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_PRODUCTO_TB
WHERE id_producto = P_ID;
END;
/
-- 6 FIDE_CLIENTE_TB
-- Insertar un cliente
CREATE OR REPLACE PROCEDURE FIDE_CLIENTE_INSERTAR_SP (
P_ID_CLIENTE IN NUMBER,
P_NOMBRE IN VARCHAR2,
P_CORREO IN VARCHAR2,
P_TELEFONO IN VARCHAR2
) IS
BEGIN
INSERT INTO FIDE_CLIENTE_TB (
id_cliente, nombre, correo, telefono
) VALUES (
P_ID_CLIENTE, P_NOMBRE, P_CORREO, P_TELEFONO
);
END;
/
-- Actualizar un cliente
CREATE OR REPLACE PROCEDURE FIDE_CLIENTE_ACTUALIZAR_SP (
P_ID_CLIENTE IN NUMBER,
P_NOMBRE IN VARCHAR2,
P_CORREO IN VARCHAR2,
P_TELEFONO IN VARCHAR2
) IS
BEGIN
UPDATE FIDE_CLIENTE_TB
SET nombre = P_NOMBRE,
correo = P_CORREO,
telefono = P_TELEFONO
WHERE id_cliente = P_ID_CLIENTE;
END;
/
-- Eliminar un cliente
CREATE OR REPLACE PROCEDURE FIDE_CLIENTE_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_CLIENTE_TB
WHERE id_cliente = P_ID;
END;
/
-- Obtener un cliente por ID
CREATE OR REPLACE PROCEDURE FIDE_CLIENTE_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_CLIENTE_TB
WHERE id_cliente = P_ID;
END;
/
-- 7 FIDE_DIRECCION_TB
-- Insertar una dirección
CREATE OR REPLACE PROCEDURE FIDE_DIRECCION_INSERTAR_SP (
P_ID_DIRECCION IN NUMBER,
P_ID_CLIENTE IN NUMBER,
P_DIRECCION IN VARCHAR2
) IS
BEGIN
INSERT INTO FIDE_DIRECCION_TB (
id_direccion, id_cliente, direccion
) VALUES (
P_ID_DIRECCION, P_ID_CLIENTE, P_DIRECCION
);
END;
/
-- Actualizar una dirección
CREATE OR REPLACE PROCEDURE FIDE_DIRECCION_ACTUALIZAR_SP (
P_ID_DIRECCION IN NUMBER,
P_ID_CLIENTE IN NUMBER,
P_DIRECCION IN VARCHAR2
) IS
BEGIN
UPDATE FIDE_DIRECCION_TB
SET id_cliente = P_ID_CLIENTE,
direccion = P_DIRECCION
WHERE id_direccion = P_ID_DIRECCION;
END;
/
-- Eliminar una dirección
CREATE OR REPLACE PROCEDURE FIDE_DIRECCION_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_DIRECCION_TB
WHERE id_direccion = P_ID;
END;
/
-- Obtener una dirección por ID
CREATE OR REPLACE PROCEDURE FIDE_DIRECCION_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_DIRECCION_TB
WHERE id_direccion = P_ID;
END;
/
-- 8 FIDE_PROVINCIA_TB
-- Insertar una provincia
CREATE OR REPLACE PROCEDURE FIDE_PROVINCIA_INSERTAR_SP (
P_ID_PROVINCIA IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
INSERT INTO FIDE_PROVINCIA_TB (
id_provincia, nombre
) VALUES (
P_ID_PROVINCIA, P_NOMBRE
);
END;
/
-- Actualizar una provincia
CREATE OR REPLACE PROCEDURE FIDE_PROVINCIA_ACTUALIZAR_SP (
P_ID_PROVINCIA IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
UPDATE FIDE_PROVINCIA_TB
SET nombre = P_NOMBRE
WHERE id_provincia = P_ID_PROVINCIA;
END;
/
-- Eliminar una provincia
CREATE OR REPLACE PROCEDURE FIDE_PROVINCIA_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_PROVINCIA_TB
WHERE id_provincia = P_ID;
END;
/
-- Obtener una provincia por ID
CREATE OR REPLACE PROCEDURE FIDE_PROVINCIA_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_PROVINCIA_TB
WHERE id_provincia = P_ID;
END;
/
-- 9 FIDE_CANTON_TB
-- Insertar un cantón
CREATE OR REPLACE PROCEDURE FIDE_CANTON_INSERTAR_SP (
P_ID_CANTON IN NUMBER,
P_ID_PROVINCIA IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
INSERT INTO FIDE_CANTON_TB (
id_canton, id_provincia, nombre
) VALUES (
P_ID_CANTON, P_ID_PROVINCIA, P_NOMBRE
);
END;
/
-- Actualizar un cantón
CREATE OR REPLACE PROCEDURE FIDE_CANTON_ACTUALIZAR_SP (
P_ID_CANTON IN NUMBER,
P_ID_PROVINCIA IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
UPDATE FIDE_CANTON_TB
SET id_provincia = P_ID_PROVINCIA,
nombre = P_NOMBRE
WHERE id_canton = P_ID_CANTON;
END;
/
-- Eliminar un cantón
CREATE OR REPLACE PROCEDURE FIDE_CANTON_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_CANTON_TB
WHERE id_canton = P_ID;
END;
/
-- Obtener un cantón por ID
CREATE OR REPLACE PROCEDURE FIDE_CANTON_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_CANTON_TB
WHERE id_canton = P_ID;
END;
/
-- 10 FIDE_DISTRITO_TB
-- Insertar un distrito
CREATE OR REPLACE PROCEDURE FIDE_DISTRITO_INSERTAR_SP (
P_ID_DISTRITO IN NUMBER,
P_ID_CANTON IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
INSERT INTO FIDE_DISTRITO_TB (
id_distrito, id_canton, nombre
) VALUES (
P_ID_DISTRITO, P_ID_CANTON, P_NOMBRE
);
END;
/
-- Actualizar un distrito
CREATE OR REPLACE PROCEDURE FIDE_DISTRITO_ACTUALIZAR_SP (
P_ID_DISTRITO IN NUMBER,
P_ID_CANTON IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
UPDATE FIDE_DISTRITO_TB
SET id_canton = P_ID_CANTON,
nombre = P_NOMBRE
WHERE id_distrito = P_ID_DISTRITO;
END;
/
-- Eliminar un distrito
CREATE OR REPLACE PROCEDURE FIDE_DISTRITO_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_DISTRITO_TB
WHERE id_distrito = P_ID;
END;
/
-- Obtener un distrito por ID
CREATE OR REPLACE PROCEDURE FIDE_DISTRITO_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_DISTRITO_TB
WHERE id_distrito = P_ID;
END;
/
-- 11 FIDE_ESTADO_PEDIDO_TB
-- Insertar un estado de pedido
CREATE OR REPLACE PROCEDURE FIDE_ESTADO_PEDIDO_INSERTAR_SP (
P_ID_ESTADO IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
INSERT INTO FIDE_ESTADO_PEDIDO_TB (
id_estado, nombre
) VALUES (
P_ID_ESTADO, P_NOMBRE
);
END;
/
-- Actualizar un estado de pedido
CREATE OR REPLACE PROCEDURE FIDE_ESTADO_PEDIDO_ACTUALIZAR_SP (
P_ID_ESTADO IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
UPDATE FIDE_ESTADO_PEDIDO_TB
SET nombre = P_NOMBRE
WHERE id_estado = P_ID_ESTADO;
END;
/
-- Eliminar un estado de pedido
CREATE OR REPLACE PROCEDURE FIDE_ESTADO_PEDIDO_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_ESTADO_PEDIDO_TB
WHERE id_estado = P_ID;
END;
/
-- Obtener un estado de pedido por ID
CREATE OR REPLACE PROCEDURE FIDE_ESTADO_PEDIDO_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_ESTADO_PEDIDO_TB
WHERE id_estado = P_ID;
END;
/
-- 12 FIDE_PEDIDO_TB
-- Insertar un pedido
CREATE OR REPLACE PROCEDURE FIDE_PEDIDO_INSERTAR_SP (
P_ID_PEDIDO IN NUMBER,
P_FECHA_PEDIDO IN DATE,
P_CANTIDAD IN NUMBER,
P_PRECIO_UNITARIO IN NUMBER,
P_SUBTOTAL IN NUMBER,
P_TOTAL IN NUMBER,
P_ID_FACTURA IN NUMBER,
P_ID_PRODUCTO IN NUMBER,
P_ID_ESTADO IN NUMBER,
P_ID_USUARIO IN NUMBER,
P_ID_CLIENTE IN NUMBER,
P_ID_DIRECCION IN NUMBER
) IS
BEGIN
INSERT INTO FIDE_PEDIDO_TB (
id_pedido, fecha_pedido, cantidad, precio_unitario,
subtotal, total, id_factura, id_producto,
id_estado, id_usuario, id_cliente, id_direccion
) VALUES (
P_ID_PEDIDO, P_FECHA_PEDIDO, P_CANTIDAD, P_PRECIO_UNITARIO,
P_SUBTOTAL, P_TOTAL, P_ID_FACTURA, P_ID_PRODUCTO,
P_ID_ESTADO, P_ID_USUARIO, P_ID_CLIENTE, P_ID_DIRECCION
);
END;
/
-- Actualizar un pedido
CREATE OR REPLACE PROCEDURE FIDE_PEDIDO_ACTUALIZAR_SP (
P_ID_PEDIDO IN NUMBER,
P_FECHA_PEDIDO IN DATE,
P_CANTIDAD IN NUMBER,
P_PRECIO_UNITARIO IN NUMBER,
P_SUBTOTAL IN NUMBER,
P_TOTAL IN NUMBER,
P_ID_FACTURA IN NUMBER,
P_ID_PRODUCTO IN NUMBER,
P_ID_ESTADO IN NUMBER,
P_ID_USUARIO IN NUMBER,
P_ID_CLIENTE IN NUMBER,
P_ID_DIRECCION IN NUMBER
) IS
BEGIN
UPDATE FIDE_PEDIDO_TB
SET fecha_pedido = P_FECHA_PEDIDO,
cantidad = P_CANTIDAD,
precio_unitario = P_PRECIO_UNITARIO,
subtotal = P_SUBTOTAL,
total = P_TOTAL,
id_factura = P_ID_FACTURA,
id_producto = P_ID_PRODUCTO,
id_estado = P_ID_ESTADO,
id_usuario = P_ID_USUARIO,
id_cliente = P_ID_CLIENTE,
id_direccion = P_ID_DIRECCION
WHERE id_pedido = P_ID_PEDIDO;
END;
/
-- Eliminar un pedido
CREATE OR REPLACE PROCEDURE FIDE_PEDIDO_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_PEDIDO_TB
WHERE id_pedido = P_ID;
END;
/
-- Obtener un pedido por ID
CREATE OR REPLACE PROCEDURE FIDE_PEDIDO_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_PEDIDO_TB
WHERE id_pedido = P_ID;
END;
/
-- 13 FIDE_INGRESO_TB
-- Insertar un ingreso
CREATE OR REPLACE PROCEDURE FIDE_INGRESO_INSERTAR_SP (
P_ID_INGRESO IN NUMBER,
P_ID_PRODUCTO IN NUMBER,
P_CANTIDAD IN NUMBER,
P_FECHA IN DATE
) IS
BEGIN
INSERT INTO FIDE_INGRESO_TB (
id_ingreso, id_producto, cantidad, fecha
) VALUES (
P_ID_INGRESO, P_ID_PRODUCTO, P_CANTIDAD, P_FECHA
);
END;
/
-- Actualizar un ingreso
CREATE OR REPLACE PROCEDURE FIDE_INGRESO_ACTUALIZAR_SP (
P_ID_INGRESO IN NUMBER,
P_ID_PRODUCTO IN NUMBER,
P_CANTIDAD IN NUMBER,
P_FECHA IN DATE
) IS
BEGIN
UPDATE FIDE_INGRESO_TB
SET id_producto = P_ID_PRODUCTO,
cantidad = P_CANTIDAD,
fecha = P_FECHA
WHERE id_ingreso = P_ID_INGRESO;
END;
/
-- Eliminar un ingreso
CREATE OR REPLACE PROCEDURE FIDE_INGRESO_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_INGRESO_TB
WHERE id_ingreso = P_ID;
END;
/
-- Obtener un ingreso por ID
CREATE OR REPLACE PROCEDURE FIDE_INGRESO_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_INGRESO_TB
WHERE id_ingreso = P_ID;
END;
/
-- 14 FIDE_EGRESO_TB
-- Insertar un egreso
CREATE OR REPLACE PROCEDURE FIDE_EGRESO_INSERTAR_SP (
P_ID_EGRESO IN NUMBER,
P_ID_PRODUCTO IN NUMBER,
P_CANTIDAD IN NUMBER,
P_FECHA IN DATE
) IS
BEGIN
INSERT INTO FIDE_EGRESO_TB (
id_egreso, id_producto, cantidad, fecha
) VALUES (
P_ID_EGRESO, P_ID_PRODUCTO, P_CANTIDAD, P_FECHA
);
END;
/
-- Actualizar un egreso
CREATE OR REPLACE PROCEDURE FIDE_EGRESO_ACTUALIZAR_SP (
P_ID_EGRESO IN NUMBER,
P_ID_PRODUCTO IN NUMBER,
P_CANTIDAD IN NUMBER,
P_FECHA IN DATE
) IS
BEGIN
UPDATE FIDE_EGRESO_TB
SET id_producto = P_ID_PRODUCTO,
cantidad = P_CANTIDAD,
fecha = P_FECHA
WHERE id_egreso = P_ID_EGRESO;
END;
/
-- Eliminar un egreso
CREATE OR REPLACE PROCEDURE FIDE_EGRESO_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_EGRESO_TB
WHERE id_egreso = P_ID;
END;
/
-- Obtener un egreso por ID
CREATE OR REPLACE PROCEDURE FIDE_EGRESO_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_EGRESO_TB
WHERE id_egreso = P_ID;
END;
/
-- 15 FIDE_INSUMO_TB
-- Insertar un insumo
CREATE OR REPLACE PROCEDURE FIDE_INSUMO_INSERTAR_SP (
P_ID_INSUMO IN NUMBER,
P_NOMBRE IN VARCHAR2,
P_DESCRIPCION IN VARCHAR2,
P_ID_UNIDAD_MEDIDA IN NUMBER
) IS
BEGIN
INSERT INTO FIDE_INSUMO_TB (
id_insumo, nombre, descripcion, id_unidad_medida
) VALUES (
P_ID_INSUMO, P_NOMBRE, P_DESCRIPCION, P_ID_UNIDAD_MEDIDA
);
END;
/
-- Actualizar un insumo
CREATE OR REPLACE PROCEDURE FIDE_INSUMO_ACTUALIZAR_SP (
P_ID_INSUMO IN NUMBER,
P_NOMBRE IN VARCHAR2,
P_DESCRIPCION IN VARCHAR2,
P_ID_UNIDAD_MEDIDA IN NUMBER
) IS
BEGIN
UPDATE FIDE_INSUMO_TB
SET nombre = P_NOMBRE,
descripcion = P_DESCRIPCION,
id_unidad_medida = P_ID_UNIDAD_MEDIDA
WHERE id_insumo = P_ID_INSUMO;
END;
/
-- Eliminar un insumo
CREATE OR REPLACE PROCEDURE FIDE_INSUMO_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_INSUMO_TB
WHERE id_insumo = P_ID;
END;
/
-- Obtener un insumo por ID
CREATE OR REPLACE PROCEDURE FIDE_INSUMO_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_INSUMO_TB
WHERE id_insumo = P_ID;
END;
/
-- Obtener datos de insumo por ID
CREATE OR REPLACE PROCEDURE FIDE_INSUMO_OBTENER_POR_ID_SP (
P_ID_INSUMO IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT id_insumo, nombre, descripcion, id_unidad_medida
FROM FIDE_INSUMO_TB
WHERE id_insumo = P_ID_INSUMO;
END;
/
-- Obtener datos de insumo por nombre
CREATE OR REPLACE PROCEDURE FIDE_INSUMO_OBTENER_POR_NOMBRE_SP (
P_NOMBRE IN VARCHAR2,
P_RESULTADO OUT SYS_REFCURSOR
)
IS
BEGIN
OPEN P_RESULTADO FOR
SELECT id_insumo, nombre, descripcion, id_unidad_medida
FROM FIDE_INSUMO_TB
WHERE UPPER(nombre) = UPPER(P_NOMBRE);
END;
/
-- 16 FIDE_PROVEEDOR_TB
-- Insertar un proveedor
CREATE OR REPLACE PROCEDURE FIDE_PROVEEDOR_INSERTAR_SP (
P_ID_PROVEEDOR IN NUMBER,
P_NOMBRE IN VARCHAR2,
P_CORREO IN VARCHAR2,
P_TELEFONO IN VARCHAR2
) IS
BEGIN
INSERT INTO FIDE_PROVEEDOR_TB (
id_proveedor, nombre, correo, telefono
) VALUES (
P_ID_PROVEEDOR, P_NOMBRE, P_CORREO, P_TELEFONO
);
END;
/
-- Actualizar un proveedor
CREATE OR REPLACE PROCEDURE FIDE_PROVEEDOR_ACTUALIZAR_SP (
P_ID_PROVEEDOR IN NUMBER,
P_NOMBRE IN VARCHAR2,
P_CORREO IN VARCHAR2,
P_TELEFONO IN VARCHAR2
) IS
BEGIN
UPDATE FIDE_PROVEEDOR_TB
SET nombre = P_NOMBRE,
correo = P_CORREO,
telefono = P_TELEFONO
WHERE id_proveedor = P_ID_PROVEEDOR;
END;
/
-- Eliminar un proveedor
CREATE OR REPLACE PROCEDURE FIDE_PROVEEDOR_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_PROVEEDOR_TB
WHERE id_proveedor = P_ID;
END;
/
-- Obtener un proveedor por ID
CREATE OR REPLACE PROCEDURE FIDE_PROVEEDOR_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_PROVEEDOR_TB
WHERE id_proveedor = P_ID;
END;
/
-- 17 FIDE_ORDEN_COMPRA_TB
-- Insertar una orden de compra
CREATE OR REPLACE PROCEDURE FIDE_ORDEN_COMPRA_INSERTAR_SP (
P_ID_ORDEN_COMPRA IN NUMBER,
P_ID_PROVEEDOR IN NUMBER,
P_FECHA IN DATE,
P_TOTAL IN NUMBER
) IS
BEGIN
INSERT INTO FIDE_ORDEN_COMPRA_TB (
id_orden_compra, id_proveedor, fecha, total
) VALUES (
P_ID_ORDEN_COMPRA, P_ID_PROVEEDOR, P_FECHA, P_TOTAL
);
END;
/
-- Actualizar una orden de compra
CREATE OR REPLACE PROCEDURE FIDE_ORDEN_COMPRA_ACTUALIZAR_SP (
P_ID_ORDEN_COMPRA IN NUMBER,
P_ID_PROVEEDOR IN NUMBER,
P_FECHA IN DATE,
P_TOTAL IN NUMBER
) IS
BEGIN
UPDATE FIDE_ORDEN_COMPRA_TB
SET id_proveedor = P_ID_PROVEEDOR,
fecha = P_FECHA,
total = P_TOTAL
WHERE id_orden_compra = P_ID_ORDEN_COMPRA;
END;
/
-- Eliminar una orden de compra
CREATE OR REPLACE PROCEDURE FIDE_ORDEN_COMPRA_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_ORDEN_COMPRA_TB
WHERE id_orden_compra = P_ID;
END;
/
-- Obtener una orden de compra por ID
CREATE OR REPLACE PROCEDURE FIDE_ORDEN_COMPRA_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_ORDEN_COMPRA_TB
WHERE id_orden_compra = P_ID;
END;
/
-- 18 FIDE_PRODUCTO_INSUMO_TB
-- Insertar relación producto-insumo
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_INSUMO_INSERTAR_SP (
P_ID_PRODUCTO_INSUMO IN NUMBER,
P_ID_PRODUCTO IN NUMBER,
P_ID_INSUMO IN NUMBER
) IS
BEGIN
INSERT INTO FIDE_PRODUCTO_INSUMO_TB (
id_producto_insumo, id_producto, id_insumo
) VALUES (
P_ID_PRODUCTO_INSUMO, P_ID_PRODUCTO, P_ID_INSUMO
);
END;
/
-- Actualizar relación producto-insumo
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_INSUMO_ACTUALIZAR_SP (
P_ID_PRODUCTO_INSUMO IN NUMBER,
P_ID_PRODUCTO IN NUMBER,
P_ID_INSUMO IN NUMBER
) IS
BEGIN
UPDATE FIDE_PRODUCTO_INSUMO_TB
SET id_producto = P_ID_PRODUCTO,
id_insumo = P_ID_INSUMO
WHERE id_producto_insumo = P_ID_PRODUCTO_INSUMO;
END;
/
-- Eliminar relación producto-insumo
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_INSUMO_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_PRODUCTO_INSUMO_TB
WHERE id_producto_insumo = P_ID;
END;
/
-- Obtener relación producto-insumo por ID
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTO_INSUMO_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_PRODUCTO_INSUMO_TB
WHERE id_producto_insumo = P_ID;
END;
/
-- 19 FIDE_TIPO_EDIFICIO_TB
-- Insertar un tipo de edificio
CREATE OR REPLACE PROCEDURE FIDE_TIPO_EDIFICIO_INSERTAR_SP (
P_ID_TIPO_EDIFICIO IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
INSERT INTO FIDE_TIPO_EDIFICIO_TB (
id_tipo_edificio, nombre
) VALUES (
P_ID_TIPO_EDIFICIO, P_NOMBRE
);
END;
/
-- Actualizar un tipo de edificio
CREATE OR REPLACE PROCEDURE FIDE_TIPO_EDIFICIO_ACTUALIZAR_SP (
P_ID_TIPO_EDIFICIO IN NUMBER,
P_NOMBRE IN VARCHAR2
) IS
BEGIN
UPDATE FIDE_TIPO_EDIFICIO_TB
SET nombre = P_NOMBRE
WHERE id_tipo_edificio = P_ID_TIPO_EDIFICIO;
END;
/
-- Eliminar un tipo de edificio
CREATE OR REPLACE PROCEDURE FIDE_TIPO_EDIFICIO_ELIMINAR_SP (
P_ID IN NUMBER
) IS
BEGIN
DELETE FROM FIDE_TIPO_EDIFICIO_TB
WHERE id_tipo_edificio = P_ID;
END;
/
-- Obtener un tipo de edificio por ID
CREATE OR REPLACE PROCEDURE FIDE_TIPO_EDIFICIO_OBTENER_POR_ID_SP (
P_ID IN NUMBER,
P_RESULTADO OUT SYS_REFCURSOR
) IS
BEGIN
OPEN P_RESULTADO FOR
SELECT * FROM FIDE_TIPO_EDIFICIO_TB
WHERE id_tipo_edificio = P_ID;
END;
/



